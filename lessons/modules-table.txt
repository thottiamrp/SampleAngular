
/*
 * TS
*/

import { Component, OnInit } from '@angular/core';
import { Router } from "@angular/router";
import { IClaims } from '../../models/claims.model';
import { ApiCrudService } from '../../../services/api-crud-service';

@Component({
  selector: 'app-claims-table',
  templateUrl: './claims-table.component.html',
  styleUrls: ['./claims-table.component.css']
})
export class ClaimsTableComponent implements OnInit {

  private claimId: string | number;
  public claims: Array<IClaims | any>;
  public open: boolean;
  public results: number = 0;

  constructor(
    private router: Router,
    private api: ApiCrudService,
  ) { }

  editClaim(id: string | number): void {
    this.router.navigate([
      '/claims', 'edit', id
    ])
  }

  deleteClaim(id: string | number): void {
    this.open = true;
    this.claimId = id;
  }

  confirmDelete(): void {
    this.api.delete(
      `/api/v1/claims/${this.claimId}`
    ).then(({ claims }: any) => {
      this.setClaimsTable(claims);
      this.open = false;
    });
  }

  cancelDelete(): void {
    this.open = false;
  }

  setClaimsTable(claims:Array<IClaims>) : void {
    this.claims = claims;
    this.results = claims.length;
  }

  ngOnInit(): void {
    this.api.read('/api/v1/claims').then(({
      claims
    }: any) => {
      this.setClaimsTable(claims)
    });
  }
}

/*
 * HTML
*/

<uef-table search
  width="100%"
  height="900px"
  sticky-header
  sticky-footer
  striped="odd"
  breakpoint="800px">
  <uef-pagination slot="uef-table-controls-top"
    show-text
    page="1"
    dial="3"
    limit="10"
    [results]="results">
  </uef-pagination>
  <uef-thead>
    <uef-tr>
      <uef-th sortable
        width="200px">Name</uef-th>
      <uef-th sortable
        width="150px">Claim Date</uef-th>
      <uef-th width="300px">Description</uef-th>
      <uef-th sortable
        width="100px">State</uef-th>
      <uef-th width="100px"
        sortable
        align="center">Zip</uef-th>
      <uef-th width="215px"
        accessibility-text="Actions"
        align="center">
        Actions
      </uef-th>
    </uef-tr>
  </uef-thead>
  <uef-tbody>
    <uef-tr *ngFor="let claim of claims; let i = index">
      <uef-td data-label="Name">{{claim.name_title}} {{claim.first_name}} {{claim.last_name}} {{claim.suffix}}
      </uef-td>
      <uef-td data-label="Claim Date">{{claim.claim_date}} </uef-td>
      <uef-td data-label="Description">{{claim.description}}</uef-td>
      <uef-td data-label="State">{{claim.state}}</uef-td>
      <uef-td data-label="Zip">{{claim.zip}}</uef-td>
      <uef-td align="center">
        <uef-button fill="none"
          (buttonClick)="editClaim(claim.id)"
          accessibilityText="Edit claim for {{claim.first_name}} {{claim.last_name}}">
          <uef-icon name="edit"
            type="solid"> </uef-icon>
          Edit
        </uef-button>
        <uef-button fill="none"
          accessibilityText="Delete claim for {{claim.first_name}} {{claim.last_name}}"
          (buttonClick)="deleteClaim(claim.id)">
          <uef-icon name="times"
            type="solid"></uef-icon>
          Delete
        </uef-button>
      </uef-td>
    </uef-tr>
  </uef-tbody>
  <uef-pagination slot="uef-table-controls-bottom"
    show-text
    page="1"
    dial="3"
    limit="10"
    [results]="results"></uef-pagination>
</uef-table>
<app-confirmation [open]="open"
  (confirm)="confirmDelete()"
  (cancel)="cancelDelete()">
</app-confirmation>
